#!/usr/bin/env bash
#
# Requirements: Linux, bc.
set -eu

usage() {
    echo "Usage: $0 <cpu|gpu> <devname> <benchmarks-dir>"
    echo
    echo "Run cldrive over benchmarks directory. Arguments:"
    echo
    echo "  <cpu|gpu>         OpenCL device type"
    echo "  <devname>         Device name (e.g. 'intel', 'nvidia')"
    echo "  <benchmarks-dir>  Root of benchmarks directory"
}


main() {
    if [[ $# -ne 3 ]]; then
        usage >&2
        exit 1
    fi

    local devtype=$1
    local devname=$2
    local benchmarks_dir=$3

    local kernels_dir=$benchmarks_dir/kernels
    local results_path=$benchmarks_dir/$devname.csv
    local errors_path=$benchmarks_dir/$devname-errors.csv

    if [ ! -d $benchmarks_dir ]; then
        echo "fatal: '$benchmarks_dir' not found!" >&2
        exit 1
    fi

    if [ ! -d $kernels_dir ]; then
        echo "fatal: '$kernels_dir' not found!" >&2
        exit 1
    fi

    touch $results_path
    touch $errors_path

    # Strip NULL characters from files:
    tr < $results_path -d '\000' > $results_path.tmp
    mv $results_path.tmp $results_path

    # Pattern patch the error file schema. This will strip any gumpf
    # that made it in there.
    tr < $errors_path -d '\000' > $errors_path.tmp
    grep -E '^[a-zA-Z0-9_\.-]+\.cl,[0-9]+,E_[A-Z_]+,[a-zA-Z0-9_\.-]+$' \
         $errors_path.tmp > $errors_path || true
    rm $errors_path.tmp

    echo -n "building job list for $results_path ... "
    date +"%y-%m-%d %H:%M:%S, $HOSTNAME, mkjoblist" \
         >> /var/log/cldrive.log
    jobslist=$(./mkjoblist $kernels_dir $results_path $errors_path)
    num_jobs=$(echo "$jobslist" | wc -l)
    echo "$((num_jobs-1)) jobs"

    local i=0
    for job in ${jobslist[@]}; do
        local file=$kernels_dir/$(echo $job | cut -d',' -f1)
        local dsize=$(echo $job | cut -d',' -f2)

        i=$((i+1))
        local perc_done=$(echo "($i / $num_jobs) * 100" | bc -l | xargs printf '%.2f%%')

        echo "$(tput bold)$(tput setaf 1)$(date +"%y-%m-%d %H:%M:%S $HOSTNAME")$(tput sgr0) job [$i/$num_jobs] $perc_done ... $devtype $dsize $(basename $file)"
        date +"%y-%m-%d %H:%M:%S, $HOSTNAME, job [$i/$num_jobs] $perc_done ... $devtype $dsize $(basename $file)" >> /var/log/cldrive.log
        set +e
        ./driver $devtype $dsize $file >> $results_path 2>> $errors_path
        local ret=$?
        set -e

        if [[ $ret == 137 ]]; then
            echo "$(basename $file),$dsize,E_TIMEOUT,-" >> $errors_path
        fi
    done
}
main $@
